name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: e-commerce-app
  CONTAINER_NAME: e-commerce-container
  SONAR_PROJECT_KEY: sonar-test-e-commerce_new-sonarscan
  SONAR_ORGANIZATION: sonar-test-e-commerce
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      # --- üîπ Step 1: Checkout repository ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- üîπ Step 2: Set up Java (required for SonarCloud) ---
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      # --- üîπ Step 3: Set up Docker Buildx ---
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- üîπ Step 4: Build Docker image ---
      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$GITHUB_SHA .

      # --- üîπ Step 5: SonarCloud Scan ---
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.sources=.
            -Dsonar.java.binaries=.
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
            -Dsonar.qualitygate.wait=true
            -Dsonar.branch.name=${{ github.ref_name }}

      # --- üîπ Step 6: Slack Success Notification ---
      - name: Send Slack Success Notification
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"‚úÖ *CI Pipeline Succeeded!*\nRepository: $GITHUB_REPOSITORY\nBranch: $GITHUB_REF_NAME\nCommit: $GITHUB_SHA\"}" \
          $SLACK_WEBHOOK_URL

      # --- üîπ Step 7: Slack Failure Notification ---
      - name: Send Slack Failure Notification
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"‚ùå *CI Pipeline Failed!*\nRepository: $GITHUB_REPOSITORY\nBranch: $GITHUB_REF_NAME\nCommit: $GITHUB_SHA\"}" \
          $SLACK_WEBHOOK_URL
