name: CI Pipeline
on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: e-commerce-app
  CONTAINER_NAME: e-commerce-container
  SONAR_PROJECT_KEY: sonar-test-e-commerce_new-sonarscan
  SONAR_ORGANIZATION: sonar-test-e-commerce
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  # Job 1: SonarCloud Code Analysis
  sonarcloud-analysis:
    name: SonarCloud Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/*.java') }}
          restore-keys: |
            ${{ runner.os }}-sonar-


      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }}
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**,**/*.test.js,**/*.spec.js
            -Dsonar.qualitygate.wait=true


  # Job 3: Notify Success
  notify-success:
    name: Send Success Notification
    runs-on: ubuntu-latest
    needs: sonarcloud-analysis
    if: success()
    steps:
      - name: Send Slack Success Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"✅ *CI Pipeline Succeeded!*\nRepository: $GITHUB_REPOSITORY\nBranch: $GITHUB_REF_NAME\nCommit: $GITHUB_SHA\"}" \
          "$SLACK_WEBHOOK_URL"

  # Job 4: Notify Failure
  notify-failure:
    name: Send Failure Notification
    runs-on: ubuntu-latest
    needs: sonarcloud-analysis
    if: failure()
    steps:
      - name: Send Slack Failure Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"❌ *CI Pipeline Failed!*\nRepository: $GITHUB_REPOSITORY\nBranch: $GITHUB_REF_NAME\nCommit: $GITHUB_SHA\"}" \
          "$SLACK_WEBHOOK_URL"
